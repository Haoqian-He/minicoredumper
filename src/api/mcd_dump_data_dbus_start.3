'\" t
.\"
.\" Author: John Ogness
.\"
.\" This file has been put into the public domain.
.\" You can do whatever you want with this file.
.\"
.TH MCD_DUMP_DATA_DBUS_START 3 "2016-07-19" "Ericsson" "minicoredumper"
.
.SH NAME
mcd_dump_data_dbus_start \- start thread for D-Bus communication or inotify
fallback notification
.
.SH SYNOPSIS
.nf
.B #include <minicoredumper.h>

.B int mcd_dump_data_dbus_start(void);
.fi
.PP
Compile and link with
.IR -lminicoredumper .
.
.SH DESCRIPTION
The
.BR mcd_dump_data_dbus_start ()
function starts a new thread to wait for incoming requests to dump data
registered with
.BR libminicoredumper (7).
This function must be called if an application is expected to dump its data
upon the request of
.BR minicoredumper (1).
If D-Bus support is enabled, this function will register with the D-Bus daemon
.BR minicoredumper_dbusd (1).
Otherwise, if the environment variable MINICOREDUMPER_MONITOR exists and
specifies an absolute path to a file, an
.BR inotify (7)
watch is created.
.
.SH "RETURN VALUE"
.BR mcd_dump_data_dbus_start ()
always returns 0. It is not possible for an application to know if the
registration with
.BR minicoredumper_dbusd (1)
or setup of the
.BR inotify (7)
watch was successful.
.
.SH "SEE ALSO"
.BR libminicoredumper (7),
.BR minicoredumper_dbusd (1)
.PP
The DiaMon Workgroup: <http://www.diamon.org>
