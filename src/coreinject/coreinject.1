'\" t
.\"
.\" Author: John Ogness
.\"
.\" This file has been put into the public domain.
.\" You can do whatever you want with this file.
.\"
.TH COREINJECT 1 "2016-07-19" "Ericsson" "minicoredumper"
.
.SH NAME
coreinject \- inject binary dumps from
.BR minicoredumper (1)
into a core file
.
.SH SYNOPSIS
.B coreinject
[\fIOPTION\fR]... \fIcore\fR
.I symbol.map
.IR binary-dump ...
.
.SH DESCRIPTION
If an application using
.BR libminicoredumper (7)
registers a binary dump to not be included in the core file, the
.BR minicoredumper (1)
will create a separate dump file containing the contents of that variable.
A symbol map file
.I symbol.map
is also created by the
.BR minicoredumper (1) .
Using these files,
.B coreinject
can inject that binary data into the stripped
.I core
file for use with
.BR gdb (1).
.PP
The options are as follows:
.TP
\fB--data=\fIIDENT\fR:\fISIZE\fR@\fISRCFILE\fR+\fISRCOFF\fR
Inject
.I SIZE
bytes of data at offset
.I SRCOFF
of file
.I SRCFILE
to the
.BR core (5).
The data is injected at the location of the
.I IDENT
as stored in the symbol map. This option is useful for injecting data
other than that which was actually dumped by the
.BR minicoredumper (1).
.
.SH NOTES
If the binary dump used
.IR MCD_DATA_PTR_DIRECT ,
the separate binary file
contains exactly that data. If
.I MCD_DATA_PTR_INDIRECT
was used, the separate binary file contains first the pointer value followed
by the data pointed to by the pointer.
.
.SH EXAMPLE
Insert the binary data in
.I bdump.bin
into
.IR core .
.PP
.RS
coreinject core symbol.map bdump.bin
.RE
.
.SH "SEE ALSO"
.BR minicoredumper (1),
.BR libminicoredumper (7),
.BR mcd_dump_data_register_bin (3)
.PP
The DiaMon Workgroup: <http://www.diamon.org>
